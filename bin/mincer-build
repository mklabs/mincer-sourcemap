#!/usr/bin/env node

var fs          = require('fs');
var path        = require('path')
var exists      = fs.existsSync;
var program     = require('commander')
var MincerBuild = require('../lib/mincer-build');

// Options
function list(val) {
  return val.split(',');
}

program
  .option('-d, --debug', 'Turn on debugging info')
  .option('-I, --include <path>', 'Adds the directory to the Mincer load path. Comma separated list of values', list)
  .option('-i, --ignore <ignore>', 'Ignores the given string from assets to compile (relative to input file). Comma separated list of values', list)
  .option('-o, --output', 'Copy provided assets into the provided directory')
  .option('-f, --filename <filname>', 'Define the name of the input file')

  .on('--help', function() {
    console.log();
    console.log('Examples:');
    console.log();
    console.log('    $ mincer-build -I ./bower_components -I ./app/assets/ -o build -f index.html');
    console.log('    $ mincer-build --ignore googleapi -f index.html');
    console.log();
  })
  .parse(process.argv);

// Run
if (!program.filename) throw new Error('Missing Input HTML filename');
if (!exists(program.filename)) throw new Error('HTML input filename does not exist');

fs.readFile(program.filename, 'utf8', function(err, body) {
  if (err) throw err;
  run(body);
});

// Main function, takes a HTML input and output the modified body, with revved assets.
function run(result) {
  var build = new MincerBuild(result, program);

  build.on('end', function() {
    console.log(build.body);
  });
}
